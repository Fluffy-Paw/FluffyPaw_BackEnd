// <auto-generated />
using System;
using FluffyPaw_Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FluffyPaw_Infrastructure.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240926081708_FluffyPaw")]
    partial class FluffyPaw
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("FluffyPaw_Domain.Entities.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Avatar = "https://d1hjkbq40fs2x4.cloudfront.net/2016-01-31/files/1045.jpg",
                            CreateDate = new DateTimeOffset(new DateTime(2024, 9, 26, 15, 17, 8, 428, DateTimeKind.Unspecified).AddTicks(559), new TimeSpan(0, 7, 0, 0, 0)),
                            Email = "test@gmail.com",
                            Password = "4CC311E68571B9DB7EE9811B2D0215C97B48824469D3BF110875C97F63A90071CE2358E142222190D91A1D7C5E7DA6E4816052D5DF41B050CA01C7112BB48176",
                            RoleName = "Admin",
                            Status = true,
                            Username = "FluffyPaw"
                        },
                        new
                        {
                            Id = 2L,
                            Avatar = "https://d1hjkbq40fs2x4.cloudfront.net/2016-01-31/files/1045.jpg",
                            CreateDate = new DateTimeOffset(new DateTime(2024, 9, 26, 15, 17, 8, 428, DateTimeKind.Unspecified).AddTicks(562), new TimeSpan(0, 7, 0, 0, 0)),
                            Email = "test@gmail.com",
                            Password = "1",
                            RoleName = "StoreManager",
                            Status = true,
                            Username = "test"
                        },
                        new
                        {
                            Id = 3L,
                            Avatar = "https://d1hjkbq40fs2x4.cloudfront.net/2016-01-31/files/1045.jpg",
                            CreateDate = new DateTimeOffset(new DateTime(2024, 9, 26, 15, 17, 8, 428, DateTimeKind.Unspecified).AddTicks(565), new TimeSpan(0, 7, 0, 0, 0)),
                            Email = "test@gmail.com",
                            Password = "1",
                            RoleName = "StoreManager",
                            Status = true,
                            Username = "test"
                        },
                        new
                        {
                            Id = 4L,
                            Avatar = "https://d1hjkbq40fs2x4.cloudfront.net/2016-01-31/files/1045.jpg",
                            CreateDate = new DateTimeOffset(new DateTime(2024, 9, 26, 15, 17, 8, 428, DateTimeKind.Unspecified).AddTicks(568), new TimeSpan(0, 7, 0, 0, 0)),
                            Email = "test@gmail.com",
                            Password = "1",
                            RoleName = "Staff",
                            Status = true,
                            Username = "test"
                        },
                        new
                        {
                            Id = 5L,
                            Avatar = "https://d1hjkbq40fs2x4.cloudfront.net/2016-01-31/files/1045.jpg",
                            CreateDate = new DateTimeOffset(new DateTime(2024, 9, 26, 15, 17, 8, 428, DateTimeKind.Unspecified).AddTicks(571), new TimeSpan(0, 7, 0, 0, 0)),
                            Email = "test@gmail.com",
                            Password = "1",
                            RoleName = "Staff",
                            Status = true,
                            Username = "test"
                        },
                        new
                        {
                            Id = 6L,
                            Avatar = "https://d1hjkbq40fs2x4.cloudfront.net/2016-01-31/files/1045.jpg",
                            CreateDate = new DateTimeOffset(new DateTime(2024, 9, 26, 15, 17, 8, 428, DateTimeKind.Unspecified).AddTicks(573), new TimeSpan(0, 7, 0, 0, 0)),
                            Email = "test@gmail.com",
                            Password = "1",
                            RoleName = "PetOwner",
                            Status = true,
                            Username = "test"
                        },
                        new
                        {
                            Id = 7L,
                            Avatar = "https://d1hjkbq40fs2x4.cloudfront.net/2016-01-31/files/1045.jpg",
                            CreateDate = new DateTimeOffset(new DateTime(2024, 9, 26, 15, 17, 8, 428, DateTimeKind.Unspecified).AddTicks(576), new TimeSpan(0, 7, 0, 0, 0)),
                            Email = "test@gmail.com",
                            Password = "1",
                            RoleName = "PetOwner",
                            Status = true,
                            Username = "test"
                        });
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.BehaviorCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("BehaviorCategories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Chạy vòng tròn trước khi nằm xuống",
                            Status = false
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Liếm mặt chủ",
                            Status = false
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Rung lắc đuôi khi vui mừng",
                            Status = false
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Gầm gừ khi cảm thấy bị đe dọa",
                            Status = false
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Cào móng để đánh dấu lãnh thổ",
                            Status = false
                        });
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.Booking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CheckinTime")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Cost")
                        .HasColumnType("double");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("PetId")
                        .HasColumnType("bigint");

                    b.Property<long>("StaffAddressServiceId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.HasIndex("StaffAddressServiceId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CheckinTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Cost = 100000.0,
                            CreateDate = new DateTimeOffset(new DateTime(2024, 9, 26, 15, 17, 8, 428, DateTimeKind.Unspecified).AddTicks(1139), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "test",
                            EndTime = new DateTimeOffset(new DateTime(2024, 9, 26, 15, 17, 8, 428, DateTimeKind.Unspecified).AddTicks(1141), new TimeSpan(0, 7, 0, 0, 0)),
                            PaymentMethod = "PayOS",
                            PetId = 1L,
                            StaffAddressServiceId = 1L,
                            StartTime = new DateTimeOffset(new DateTime(2024, 9, 26, 15, 17, 8, 428, DateTimeKind.Unspecified).AddTicks(1140), new TimeSpan(0, 7, 0, 0, 0)),
                            Status = "Accept"
                        });
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.BookingRating", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BookingId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("PetOwnerId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Vote")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("PetOwnerId");

                    b.ToTable("BookingRatings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BookingId = 1L,
                            Description = "test",
                            PetOwnerId = 1L,
                            Status = true,
                            Vote = 0
                        });
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.Certificate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Certificates");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "None",
                            File = "test",
                            Name = "Certificate of Excellence in Pet Grooming"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "None",
                            File = "test",
                            Name = "Certificate of Excellence in Pet Grooming"
                        });
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.CertificateService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CertificateId")
                        .HasColumnType("bigint");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CertificateId");

                    b.HasIndex("ServiceId");

                    b.ToTable("CertificateServices");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CertificateId = 1L,
                            ServiceId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CertificateId = 2L,
                            ServiceId = 4L
                        });
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.Conversation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsOpen")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastMessege")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("PetOwnerId")
                        .HasColumnType("bigint");

                    b.Property<long>("StaffAddressId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PetOwnerId");

                    b.HasIndex("StaffAddressId");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.ConversationMessage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("ConversationId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("DeleteAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.ToTable("ConversationMessages");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.Files", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.MessageFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("FileId")
                        .HasColumnType("bigint");

                    b.Property<long>("MessageId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.HasIndex("MessageId");

                    b.ToTable("MessageFiles");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("ReceiverId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.Pet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Allergy")
                        .HasColumnType("longtext");

                    b.Property<long>("BehaviorCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Decription")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("Dob")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsNeuter")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MicrochipNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("PetCategoryId")
                        .HasColumnType("bigint");

                    b.Property<long>("PetOwnerId")
                        .HasColumnType("bigint");

                    b.Property<long>("PetTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BehaviorCategoryId");

                    b.HasIndex("PetCategoryId");

                    b.HasIndex("PetOwnerId");

                    b.HasIndex("PetTypeId");

                    b.ToTable("Pets");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Allergy = "None",
                            BehaviorCategoryId = 1L,
                            Decription = "test",
                            Dob = new DateTimeOffset(new DateTime(2024, 9, 26, 15, 17, 8, 428, DateTimeKind.Unspecified).AddTicks(928), new TimeSpan(0, 7, 0, 0, 0)),
                            IsNeuter = true,
                            MicrochipNumber = "None",
                            Name = "LuLu",
                            PetCategoryId = 1L,
                            PetOwnerId = 1L,
                            PetTypeId = 1L,
                            Sex = "Male",
                            Status = "Available",
                            Weight = 6.5f
                        },
                        new
                        {
                            Id = 2L,
                            Allergy = "None",
                            BehaviorCategoryId = 2L,
                            Decription = "test1",
                            Dob = new DateTimeOffset(new DateTime(2024, 9, 26, 15, 17, 8, 428, DateTimeKind.Unspecified).AddTicks(931), new TimeSpan(0, 7, 0, 0, 0)),
                            IsNeuter = false,
                            MicrochipNumber = "None",
                            Name = "MeowMeow",
                            PetCategoryId = 2L,
                            PetOwnerId = 1L,
                            PetTypeId = 1L,
                            Sex = "FeMale",
                            Status = "Unavailable",
                            Weight = 5f
                        });
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.PetCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PetCategories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Dog"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Cat"
                        });
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.PetOwner", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("Dob")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("PetOwners");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccountId = 6L,
                            Address = "test",
                            Dob = new DateTimeOffset(new DateTime(2024, 9, 26, 15, 17, 8, 428, DateTimeKind.Unspecified).AddTicks(853), new TimeSpan(0, 7, 0, 0, 0)),
                            FullName = "Test",
                            Gender = "Male",
                            Phone = "1234567890",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 2L,
                            AccountId = 7L,
                            Address = "test",
                            Dob = new DateTimeOffset(new DateTime(2024, 9, 26, 15, 17, 8, 428, DateTimeKind.Unspecified).AddTicks(857), new TimeSpan(0, 7, 0, 0, 0)),
                            FullName = "Test",
                            Gender = "Male",
                            Phone = "0123456789",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.PetType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("PetTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Image = "None",
                            Name = "Cho Phu Quoc",
                            Status = true
                        },
                        new
                        {
                            Id = 2L,
                            Image = "None",
                            Name = "Meo Tam The",
                            Status = true
                        });
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.Service", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("BookingCount")
                        .HasColumnType("int");

                    b.Property<double>("Cost")
                        .HasColumnType("double");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("ServiceTypeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("StoreManagerId")
                        .HasColumnType("bigint");

                    b.Property<float>("TotalRating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ServiceTypeId");

                    b.HasIndex("StoreManagerId");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BookingCount = 0,
                            Cost = 100000.0,
                            Description = "test",
                            Duration = new TimeSpan(0, 0, 30, 0, 0),
                            Name = "Grooming",
                            ServiceTypeId = 1L,
                            Status = true,
                            StoreManagerId = 1L,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = 2L,
                            BookingCount = 0,
                            Cost = 200000.0,
                            Description = "test",
                            Duration = new TimeSpan(0, 1, 0, 0, 0),
                            Name = "Vaccine",
                            ServiceTypeId = 2L,
                            Status = true,
                            StoreManagerId = 1L,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = 3L,
                            BookingCount = 0,
                            Cost = 100000.0,
                            Description = "test",
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            Name = "Hotel",
                            ServiceTypeId = 1L,
                            Status = true,
                            StoreManagerId = 1L,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = 4L,
                            BookingCount = 0,
                            Cost = 500000.0,
                            Description = "test",
                            Duration = new TimeSpan(0, 1, 30, 0, 0),
                            Name = "Training",
                            ServiceTypeId = 2L,
                            Status = true,
                            StoreManagerId = 1L,
                            TotalRating = 0f
                        });
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.ServiceFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("FileId")
                        .HasColumnType("bigint");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceFiles");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.ServiceType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ServiceTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Service Booking"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Service Reservation"
                        });
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.StaffAddress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StaffAddressName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("StoreManagerId")
                        .HasColumnType("bigint");

                    b.Property<float>("TotalRating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("StoreManagerId");

                    b.ToTable("StaffAddresses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccountId = 6L,
                            Address = "aaa",
                            Phone = "0192837465",
                            StaffAddressName = "Name",
                            StoreManagerId = 1L,
                            TotalRating = 5f
                        },
                        new
                        {
                            Id = 2L,
                            AccountId = 7L,
                            Address = "aaa",
                            Phone = "0192837465",
                            StaffAddressName = "Name",
                            StoreManagerId = 2L,
                            TotalRating = 5f
                        });
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.StaffAddressFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("FileId")
                        .HasColumnType("bigint");

                    b.Property<long>("StaffAddressId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.HasIndex("StaffAddressId");

                    b.ToTable("StaffAddressFiles");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.StaffAddressService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CurrentPetOwner")
                        .HasColumnType("int");

                    b.Property<int>("LimitPetOwner")
                        .HasColumnType("int");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.Property<long>("StaffAddressId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("TotalRating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("StaffAddressId");

                    b.ToTable("StaffAddressServices");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CurrentPetOwner = 0,
                            LimitPetOwner = 5,
                            ServiceId = 1L,
                            StaffAddressId = 1L,
                            StartTime = new DateTimeOffset(new DateTime(2024, 9, 26, 15, 17, 8, 428, DateTimeKind.Unspecified).AddTicks(1109), new TimeSpan(0, 7, 0, 0, 0)),
                            Status = "Aceepted",
                            TotalRating = 5f
                        },
                        new
                        {
                            Id = 2L,
                            CurrentPetOwner = 0,
                            LimitPetOwner = 10,
                            ServiceId = 2L,
                            StaffAddressId = 2L,
                            StartTime = new DateTimeOffset(new DateTime(2024, 9, 26, 15, 17, 8, 428, DateTimeKind.Unspecified).AddTicks(1112), new TimeSpan(0, 7, 0, 0, 0)),
                            Status = "Aceepted",
                            TotalRating = 5f
                        });
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.StoreManager", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("BusinessLicense")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("StoreManagers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccountId = 2L,
                            BusinessLicense = "None",
                            Logo = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRsGufmy584u5_GDdLQaFiguxn8Qc5ILIZ7yA&s",
                            Name = "StoreA",
                            Status = true
                        },
                        new
                        {
                            Id = 2L,
                            AccountId = 3L,
                            BusinessLicense = "None",
                            Logo = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSxTepBxTlZftnBKdB6N4gQdZLF0W8ISlHdkA&s",
                            Name = "StoreB",
                            Status = true
                        });
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.Tracking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BookingId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("UploadDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Trackings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BookingId = 1L,
                            Description = "test",
                            Status = true,
                            UploadDate = new DateTimeOffset(new DateTime(2024, 9, 26, 15, 17, 8, 428, DateTimeKind.Unspecified).AddTicks(1182), new TimeSpan(0, 7, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.TrackingFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("FileId")
                        .HasColumnType("bigint");

                    b.Property<long>("TrackingId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.HasIndex("TrackingId");

                    b.ToTable("TrackingFiles");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.VaccineHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("NextVaccineDate")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("PetCurrentWeight")
                        .HasColumnType("float");

                    b.Property<long>("PetId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("VaccineDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.ToTable("VaccineHistories");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.Voucher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BookingId")
                        .HasColumnType("bigint");

                    b.Property<int>("Percent")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.Wallet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<double>("Balance")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccountId = 1L,
                            Balance = 1000000.0
                        },
                        new
                        {
                            Id = 2L,
                            AccountId = 2L,
                            Balance = 0.0
                        },
                        new
                        {
                            Id = 3L,
                            AccountId = 3L,
                            Balance = 0.0
                        },
                        new
                        {
                            Id = 4L,
                            AccountId = 6L,
                            Balance = 100.0
                        },
                        new
                        {
                            Id = 5L,
                            AccountId = 7L,
                            Balance = 100.0
                        });
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.Booking", b =>
                {
                    b.HasOne("FluffyPaw_Domain.Entities.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluffyPaw_Domain.Entities.StaffAddressService", "StaffAddressService")
                        .WithMany()
                        .HasForeignKey("StaffAddressServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("StaffAddressService");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.BookingRating", b =>
                {
                    b.HasOne("FluffyPaw_Domain.Entities.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluffyPaw_Domain.Entities.PetOwner", "PetOwner")
                        .WithMany()
                        .HasForeignKey("PetOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("PetOwner");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.CertificateService", b =>
                {
                    b.HasOne("FluffyPaw_Domain.Entities.Certificate", "Certificate")
                        .WithMany()
                        .HasForeignKey("CertificateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluffyPaw_Domain.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Certificate");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.Conversation", b =>
                {
                    b.HasOne("FluffyPaw_Domain.Entities.PetOwner", "PetOwner")
                        .WithMany()
                        .HasForeignKey("PetOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluffyPaw_Domain.Entities.StaffAddress", "StaffAdddress")
                        .WithMany()
                        .HasForeignKey("StaffAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PetOwner");

                    b.Navigation("StaffAdddress");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.ConversationMessage", b =>
                {
                    b.HasOne("FluffyPaw_Domain.Entities.Conversation", "Conversation")
                        .WithMany()
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversation");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.MessageFile", b =>
                {
                    b.HasOne("FluffyPaw_Domain.Entities.Files", "Files")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluffyPaw_Domain.Entities.ConversationMessage", "ConversationMessage")
                        .WithMany()
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConversationMessage");

                    b.Navigation("Files");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.Notification", b =>
                {
                    b.HasOne("FluffyPaw_Domain.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.Pet", b =>
                {
                    b.HasOne("FluffyPaw_Domain.Entities.BehaviorCategory", "BehaviorCategory")
                        .WithMany()
                        .HasForeignKey("BehaviorCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluffyPaw_Domain.Entities.PetCategory", "PetCategory")
                        .WithMany()
                        .HasForeignKey("PetCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluffyPaw_Domain.Entities.PetOwner", "PetOwner")
                        .WithMany()
                        .HasForeignKey("PetOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluffyPaw_Domain.Entities.PetType", "PetType")
                        .WithMany()
                        .HasForeignKey("PetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BehaviorCategory");

                    b.Navigation("PetCategory");

                    b.Navigation("PetOwner");

                    b.Navigation("PetType");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.PetOwner", b =>
                {
                    b.HasOne("FluffyPaw_Domain.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.Service", b =>
                {
                    b.HasOne("FluffyPaw_Domain.Entities.ServiceType", "ServiceType")
                        .WithMany()
                        .HasForeignKey("ServiceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluffyPaw_Domain.Entities.StoreManager", "StoreManager")
                        .WithMany()
                        .HasForeignKey("StoreManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceType");

                    b.Navigation("StoreManager");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.ServiceFile", b =>
                {
                    b.HasOne("FluffyPaw_Domain.Entities.Files", "Files")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluffyPaw_Domain.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Files");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.StaffAddress", b =>
                {
                    b.HasOne("FluffyPaw_Domain.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluffyPaw_Domain.Entities.StoreManager", "StoreManager")
                        .WithMany()
                        .HasForeignKey("StoreManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("StoreManager");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.StaffAddressFile", b =>
                {
                    b.HasOne("FluffyPaw_Domain.Entities.Files", "Files")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluffyPaw_Domain.Entities.StaffAddress", "StaffAddress")
                        .WithMany()
                        .HasForeignKey("StaffAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Files");

                    b.Navigation("StaffAddress");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.StaffAddressService", b =>
                {
                    b.HasOne("FluffyPaw_Domain.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluffyPaw_Domain.Entities.StaffAddress", "StaffAddress")
                        .WithMany()
                        .HasForeignKey("StaffAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");

                    b.Navigation("StaffAddress");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.StoreManager", b =>
                {
                    b.HasOne("FluffyPaw_Domain.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.Tracking", b =>
                {
                    b.HasOne("FluffyPaw_Domain.Entities.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.TrackingFile", b =>
                {
                    b.HasOne("FluffyPaw_Domain.Entities.Files", "Files")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluffyPaw_Domain.Entities.Tracking", "Tracking")
                        .WithMany()
                        .HasForeignKey("TrackingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Files");

                    b.Navigation("Tracking");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.VaccineHistory", b =>
                {
                    b.HasOne("FluffyPaw_Domain.Entities.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.Voucher", b =>
                {
                    b.HasOne("FluffyPaw_Domain.Entities.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("FluffyPaw_Domain.Entities.Wallet", b =>
                {
                    b.HasOne("FluffyPaw_Domain.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
